{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario iTC\\\\Desktop\\\\Pis4to-main\\\\rutas_evacuacion\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport 'leaflet/dist/leaflet.css';\nimport Markers from \"./Markers\";\nimport placesData from '../assets/data.json';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MenuBar from \"./MenuBar\";\nimport { MapContainer, TileLayer, Polyline } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = () => {\n  _s();\n  const {\n    places\n  } = placesData;\n  const [state, setState] = useState({\n    currenlocation: {\n      lat: '-4.029817',\n      lng: '-79.199492'\n    },\n    zoom: 10\n  });\n  const location = useLocation();\n  const history = useNavigate();\n  useEffect(() => {\n    if (location.state && location.state.latitude && location.state.longitude) {\n      const currenlocation = {\n        lat: location.state.latitude,\n        lng: location.state.longitude\n      };\n      setState(prevState => ({\n        ...prevState,\n        currenlocation\n      }));\n      history.replace({\n        pathname: '/map',\n        state: {}\n      });\n    }\n  }, [history, location.state]); // Agrega las dependencias aquí\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: state.currenlocation,\n        zoom: state.zoom,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"OpenStreetMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Markers, {\n          places: places\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: places.map(place => place.geometry),\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"0SlQ/l41O9Mi7H/xVuAUmf6EYbU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","Markers","placesData","useLocation","useNavigate","MenuBar","MapContainer","TileLayer","Polyline","jsxDEV","_jsxDEV","MapView","_s","places","state","setState","currenlocation","lat","lng","zoom","location","history","latitude","longitude","prevState","replace","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","center","url","attribution","positions","map","place","geometry","color","_c","$RefreshReg$"],"sources":["C:/Users/Usuario iTC/Desktop/Pis4to-main/rutas_evacuacion/src/components/MapView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport 'leaflet/dist/leaflet.css';\nimport Markers from \"./Markers\";\nimport placesData from '../assets/data.json';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MenuBar from \"./MenuBar\";\nimport { MapContainer, TileLayer, Polyline } from \"react-leaflet\";\n\nconst MapView = () => {\n    const { places } = placesData;\n    const [state, setState] = useState({\n        currenlocation: { lat: '-4.029817', lng: '-79.199492' },\n        zoom: 10\n    })\n    const location = useLocation();\n    const history = useNavigate();\n\n    useEffect(() => {\n        if (location.state && location.state.latitude && location.state.longitude) {\n            const currenlocation = {\n                lat: location.state.latitude,\n                lng: location.state.longitude,\n            }\n            setState(prevState => ({ ...prevState, currenlocation }))\n\n            history.replace({ pathname: '/map', state: {} })\n        }\n    }, [history, location.state]); // Agrega las dependencias aquí\n\n    return (\n        <div>\n            <div><MenuBar></MenuBar></div>\n            <div>\n                <MapContainer center={state.currenlocation} zoom={state.zoom}>\n                    <TileLayer\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\"OpenStreetMap\"\n                    />\n                    <Markers places={places} />\n                    <Polyline positions={places.map(place => place.geometry)} color=\"black\" />\n                </MapContainer>\n            </div>\n        </div>\n    );\n}\nexport default MapView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}